{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\src\\\\components\\\\Listing.js\",\"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\src\\\\components\\\\MapContainer.js\",\"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\src\\\\App.js\",\"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\src\\\\index.js\"],\"names\":[\"Listing\",\"_this\",\"this\",\"displayedImage\",\"props\",\"listing\",\"image_url\",\"react_default\",\"a\",\"createElement\",\"onClick\",\"toggleListingMarker\",\"index\",\"className\",\"tabIndex\",\"name\",\"alt\",\"src\",\"address\",\"href\",\"url\",\"Component\",\"MapContainer\",\"state\",\"allMarkers\",\"filteredMarkers\",\"filteredListings\",\"activeMarker\",\"query\",\"createMarkers\",\"mapProps\",\"map\",\"google\",\"infoWindow\",\"maps\",\"InfoWindow\",\"event\",\"addListener\",\"setAnimation\",\"setState\",\"markers\",\"markerInfo\",\"forEach\",\"item\",\"marker\",\"Marker\",\"position\",\"lat\",\"lng\",\"key\",\"phone\",\"animation\",\"Animation\",\"DROP\",\"windowContent\",\"concat\",\"slice\",\"mark\",\"setContent\",\"open\",\"BOUNCE\",\"push\",\"filteredMarker\",\"clickedMarker\",\"onInfoWindowClose\",\"updateQuery\",\"updateListing\",\"filter\",\"toLowerCase\",\"includes\",\"setVisible\",\"toggleVisibleOnAll\",\"displayListings\",\"components_Listing\",\"_this2\",\"dist\",\"aria-label\",\"role\",\"zoom\",\"initialCenter\",\"toggleMenu\",\"onReady\",\"Drawer_default\",\"menuOpen\",\"onClose\",\"lib\",\"minLength\",\"debounceTimeout\",\"element\",\"type\",\"placeholder\",\"onChange\",\"e\",\"target\",\"value\",\"GoogleApiWrapper\",\"apiKey\",\"library\",\"add\",\"faBars\",\"YELP_KEY\",\"App\",\"yelpData\",\"error\",\"getYelpInfo\",\"headers\",\"Headers\",\"Authorization\",\"request\",\"Request\",\"method\",\"fetch\",\"then\",\"response\",\"json\",\"data\",\"businesses\",\"getMarkerInfo\",\"catch\",\"markerData\",\"info\",\"id\",\"coordinates\",\"latitude\",\"longitude\",\"display_phone\",\"location\",\"display_address\",\"react_fontawesome_index_es\",\"icon\",\"components_MapContainer\",\"isLocalhost\",\"Boolean\",\"window\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"contentType\",\"get\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react'\\r\\n\\r\\nclass Listing extends Component {\\r\\n  render() {\\r\\n    //if no available image, display filler\\r\\n    let displayedImage = (this.props.listing.image_url !== \\\"\\\") ?\\r\\n      this.props.listing.image_url : 'http://via.placeholder.com/250x250.jpg/FFFFFF/000000/?text=No+Image+Available';\\r\\n\\r\\n    return (\\r\\n      <section\\r\\n      // sets the corresponding marker animation\\r\\n        onClick={() => this.props.toggleListingMarker(this.props.index)} \\r\\n        className='listing' >\\r\\n        <div tabIndex='0' className=\\\"listingName\\\">{this.props.listing.name}</div>\\r\\n        <div className=\\\"listingPhoto\\\">\\r\\n          <img alt={this.props.listing.name + \\\" photo\\\"} src={displayedImage} />\\r\\n        </div>\\r\\n        <div>{this.props.listing.address[0]}</div>\\r\\n        <div>{this.props.listing.address[1]}</div>\\r\\n        <div><a href={this.props.listing.url}>See Yelp For More Information</a></div>\\r\\n      </section>\\r\\n    )\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default Listing\",\"import React, { Component } from 'react';\\r\\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\\r\\nimport Drawer from '@material-ui/core/Drawer';\\r\\nimport { DebounceInput } from 'react-debounce-input';\\r\\nimport Listing from './Listing';\\r\\n\\r\\nclass MapContainer extends Component {\\r\\n  state = {\\r\\n    allMarkers: [],\\r\\n    filteredMarkers: null,\\r\\n    filteredListings: null,\\r\\n    activeMarker: null,\\r\\n    query: \\\"\\\"\\r\\n  }\\r\\n\\r\\n  // Create markers using the props passed from the Google map via google-maps-react\\r\\n  // https://github.com/fullstackreact/google-maps-react\\r\\n  createMarkers = (mapProps, map) => {\\r\\n    // set google to mapProps from Map to allow for marker and info window creation\\r\\n    const { google } = mapProps;\\r\\n    const infoWindow = new google.maps.InfoWindow();\\r\\n\\r\\n    // if there is an open infoWindow, and another is clicked, close the active marker and set activeMarker state to null\\r\\n    google.maps.event.addListener(infoWindow, 'closeclick', () => {\\r\\n      this.state.activeMarker.setAnimation(null);\\r\\n      this.setState({ activeMarker: null });\\r\\n    });\\r\\n\\r\\n    // array to store all markers\\r\\n    let markers = [];\\r\\n\\r\\n    // For each markerInfo object, generate a GoogleMaps Marker object\\r\\n    this.props.markerInfo.forEach(item => {\\r\\n      const marker = new google.maps.Marker({\\r\\n        position: { lat: item.position.lat, lng: item.position.lng },\\r\\n        key: item.key,\\r\\n        name: item.name,\\r\\n        map: map,\\r\\n        phone: item.phone,\\r\\n        animation: google.maps.Animation.DROP\\r\\n      });\\r\\n\\r\\n      // Content for each infoWindow. Reference found here\\r\\n      // https://developers.google.com/maps/documentation/javascript/infowindows\\r\\n      let windowContent =\\r\\n        `<div className=\\\"infoWindow\\\">\\r\\n            <h3>${marker.name}</h3>\\r\\n            <p>Phone: ${marker.phone}</p>\\r\\n          </div>`;\\r\\n\\r\\n      marker.addListener('click', () => {\\r\\n        // Use slice to create a temporary marker array that can be iterated over to stop the animation for the markers\\r\\n        let tempMarkers = this.state.allMarkers.slice();\\r\\n          tempMarkers.forEach(mark => {\\r\\n            mark.setAnimation(null);\\r\\n        })\\r\\n\\r\\n        //set the content for the new window\\r\\n        infoWindow.setContent(windowContent);\\r\\n        //show the new window based on the clicked marker\\r\\n        infoWindow.open(map, marker);\\r\\n        //set state to activeMarker\\r\\n        this.setState({ activeMarker: marker });\\r\\n        //set marker animation\\r\\n        this.state.activeMarker.setAnimation(google.maps.Animation.BOUNCE);\\r\\n      });\\r\\n\\r\\n      // store marker into array to push to set to state\\r\\n      markers.push(marker);\\r\\n    });\\r\\n\\r\\n    // set state for markers\\r\\n    this.setState({ allMarkers: markers, filteredMarkers: markers });\\r\\n  };\\r\\n\\r\\n  // Set the animation for the marker that corresponds to each listing. \\r\\n  toggleListingMarker = (index) => {\\r\\n    if (this.state.filteredListings !== null) {\\r\\n      let filteredMarker = this.state.filteredMarkers[index];\\r\\n      this.setState({ activeMarker: filteredMarker })\\r\\n      filteredMarker.setAnimation(this.props.google.maps.Animation.BOUNCE);\\r\\n    } else {\\r\\n      let clickedMarker = this.state.allMarkers[index];\\r\\n      this.setState({ activeMarker: clickedMarker })\\r\\n      clickedMarker.setAnimation(this.props.google.maps.Animation.BOUNCE);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  onInfoWindowClose = (marker) => {\\r\\n    marker.setAnimation(null);\\r\\n  }\\r\\n\\r\\n  // Updates filter input if there's a query, then updates listings and markers\\r\\n  updateQuery = (query) => {\\r\\n    this.setState({ query: query })\\r\\n    this.updateListing(query)\\r\\n  };\\r\\n\\r\\n  // Set filteredListings state if query input.\\r\\n  updateListing = (query, map) => {\\r\\n    if (query) {\\r\\n      // check listing with query, set state to show only filtered listings.\\r\\n      // Used toLowerCase to prevent any hangups with case-sensitivity\\r\\n      let filteredListings = this.props.markerInfo.filter(listing => (listing.name.toLowerCase().includes(query.toLowerCase())));\\r\\n      this.setState({ filteredListings: filteredListings });\\r\\n      this.state.filteredMarkers.forEach((listing) => {\\r\\n        // check markers with query, if no match, then hide markers\\r\\n        if (!listing.name.toLowerCase().includes(query.toLowerCase())) {\\r\\n          return listing.setVisible(false);\\r\\n        }\\r\\n      })\\r\\n    } else {\\r\\n      //clear filtered listings from state, show all listings and markers\\r\\n      this.setState({ filteredListings: null });\\r\\n      this.toggleVisibleOnAll();\\r\\n    }\\r\\n  };\\r\\n\\r\\n  //Set all markers to visible\\r\\n  toggleVisibleOnAll = () => {\\r\\n    this.state.allMarkers.forEach((marker) => marker.setVisible(true))\\r\\n  };\\r\\n\\r\\n  // Map over filteredListings and display filtered listings. If null, display all listings\\r\\n  displayListings = () => {\\r\\n    if (this.state.filteredListings !== null) {\\r\\n      let filteredListing = this.state.filteredListings.map((listing, index) => (\\r\\n        <li key={listing.key}>\\r\\n          <Listing\\r\\n            index={index}\\r\\n            listing={listing}\\r\\n            allMarkers={this.state.allMarkers}\\r\\n            toggleListingMarker={this.toggleListingMarker}\\r\\n            google={this.props.google} />\\r\\n        </li>\\r\\n      ));\\r\\n      return filteredListing;\\r\\n    } else {\\r\\n      //if no filtered listings, display all listings\\r\\n      return this.props.markerInfo.map((listing, index) => (\\r\\n        <li key={listing.key}>\\r\\n          <Listing\\r\\n            index={index}\\r\\n            listing={listing}\\r\\n            allMarkers={this.state.allMarkers}\\r\\n            toggleListingMarker={this.toggleListingMarker}\\r\\n            google={this.props.google} />\\r\\n        </li>));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    const center = {\\r\\n      lat: 32.314747,\\r\\n      lng: -95.249265\\r\\n    }\\r\\n\\r\\n    return (\\r\\n      // Displays Map and markers.\\r\\n      <Map\\r\\n        aria-label=\\\"map\\\"\\r\\n        role=\\\"application\\\"\\r\\n        google={this.props.google}\\r\\n        zoom={14}\\r\\n        initialCenter={center}\\r\\n        onClick={this.props.toggleMenu}\\r\\n        onReady={this.createMarkers} >\\r\\n        <Drawer\\r\\n          open={this.props.menuOpen}\\r\\n          onClose={this.props.toggleMenu} >\\r\\n          <section className=\\\"listMenu\\\">\\r\\n            <DebounceInput\\r\\n              minLength={1}\\r\\n              debounceTimeout={500}\\r\\n              className='filter'\\r\\n              element=\\\"input\\\"\\r\\n              type='text'\\r\\n              placeholder='Filter Listings by Name'\\r\\n              onChange={e => this.updateQuery(e.target.value)}\\r\\n              value={this.state.query} />\\r\\n            <ul className='list'>\\r\\n              {this.displayListings()}\\r\\n            </ul>\\r\\n          </section>\\r\\n        </Drawer>\\r\\n      </Map>\\r\\n    )\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default GoogleApiWrapper({\\r\\n  apiKey: (\\\"AIzaSyCxXK6lMDoTo4dHosssdE0SyJ8UtVOtpbU\\\")\\r\\n})(MapContainer)\",\"import React, { Component } from 'react';\\r\\nimport MapContainer from './components/MapContainer';\\r\\nimport { library } from '@fortawesome/fontawesome-svg-core';\\r\\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\\r\\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\\r\\nimport './App.css';\\r\\n\\r\\nlibrary.add(faBars)\\r\\n\\r\\nconst YELP_KEY = 'nURSXAKqkUMPdntGky6KItOf0vSFaLnwcaN-w7MPeI5543g1OtE6dVSA_tXWRMwZaSUzNuzeyGIfT_gsINuzE_9_HO8B__a3-cvcVUNrWgOLH2yX0FvC8q3ECcnXW3Yx'\\r\\n\\r\\nclass App extends Component {\\r\\n  state = {\\r\\n    yelpData: [],\\r\\n    markerInfo: null,\\r\\n    menuOpen: false,\\r\\n    error: false\\r\\n  }\\r\\n\\r\\n  // Use FetchAPI to retrieve and store location information from YelpAPI\\r\\n  // Fix for adding headers found here: https://stackoverflow.com/questions/44444777/calling-yelp-api-from-frontend-javascript-code-running-in-a-browser\\r\\n  // Access to emulated backend found here: https://github.com/Rob--W/cors-anywhere\\r\\n  getYelpInfo = () => {\\r\\n    let url = \\\"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?radius=5000&latitude=32.322613&longitude=-95.262592&sort_by=distance&limit=50\\\"\\r\\n    let headers = new Headers({\\r\\n      Authorization: `Bearer ${YELP_KEY}`\\r\\n    });\\r\\n    let request = new Request(url, {\\r\\n      method: 'GET',\\r\\n      headers\\r\\n    })\\r\\n    fetch(request)\\r\\n      .then(response => {return response.json();})\\r\\n      .then(data => this.setState({ yelpData: data.businesses }))\\r\\n      .then(() => this.getMarkerInfo(this.state.yelpData))\\r\\n      // set error state to true to display Error Message\\r\\n      .catch(() => this.setState({ error: true }));\\r\\n  };\\r\\n\\r\\n  // Create an array to hold specific information from the YelpAPI to use for markers and listings.\\r\\n  getMarkerInfo = (markerData) => {\\r\\n    let markerInfo = [];\\r\\n    // Map over YelpAPI data to create array for markerInfo and set that array to markerInfo state\\r\\n    markerData.map(element => {\\r\\n      let info = {\\r\\n        key: element.id,\\r\\n        name: element.name,\\r\\n        position: { lat: element.coordinates.latitude, lng: element.coordinates.longitude },\\r\\n        phone: element.display_phone,\\r\\n        address: element.location.display_address,\\r\\n        image_url: element.image_url,\\r\\n        url: element.url\\r\\n      };\\r\\n      return markerInfo.push(info);\\r\\n    })\\r\\n    this.setState({ markerInfo: markerInfo })\\r\\n  };\\r\\n\\r\\n  // Toggle ListMenu\\r\\n  toggleMenu = () => {\\r\\n    this.setState({ menuOpen: !this.state.menuOpen });\\r\\n  }\\r\\n\\r\\n  // Fetch yelp info when component is mounted\\r\\n  componentDidMount() {\\r\\n    this.getYelpInfo();\\r\\n  };\\r\\n\\r\\n  render() {\\r\\n    if (this.state.error === true) {\\r\\n      // Display Error Message\\r\\n      return <div className='errorMessage'>Oh No! It looks like there was an error! Please try again later.</div>\\r\\n    } else if (this.state.markerInfo === null) {\\r\\n      // Wait for Yelp Data to populate. https://stackoverflow.com/questions/42132290/wait-for-react-promise-to-resolve-before-render\\r\\n      return <div className='loadingYelp'>Please wait. Loading data from Yelp!</div>;\\r\\n    } else {\\r\\n      return (\\r\\n        <div className=\\\"App\\\">\\r\\n          <nav className=\\\"mainHeader\\\">\\r\\n            <h2>Nom-Nom Finder</h2>\\r\\n            <button aria-label=\\\"Listing Menu\\\" onClick={this.toggleMenu}><FontAwesomeIcon icon=\\\"bars\\\" /></button>\\r\\n          </nav>\\r\\n          <MapContainer\\r\\n            markerInfo={this.state.markerInfo}\\r\\n            menuOpen={this.state.menuOpen}\\r\\n            toggleMenu={this.toggleMenu}\\r\\n            filteredListings={this.state.filteredListings}\\r\\n            filteredMarkers={this.state.filteredMarkers} />\\r\\n        </div>\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read http://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\n\\r\\nReactDOM.render(<App />, document.getElementById('root'));\\r\\n\\r\\n// If you want your app to work offline and load faster, you can change\\r\\n// unregister() to register() below. Note this comes with some pitfalls.\\r\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\r\\nserviceWorker.register();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{195:function(e,t,n){},197:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),i=n(6),o=n.n(i),s=(n(73),n(17)),l=n(18),c=n(20),u=n(19),p=n(21),g=n(38),d=n(64),m=n.n(d),f=n(63),h=function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this,t=\"\"!==this.props.listing.image_url?this.props.listing.image_url:\"http://via.placeholder.com/250x250.jpg/FFFFFF/000000/?text=No+Image+Available\";return r.a.createElement(\"section\",{onClick:function(){return e.props.toggleListingMarker(e.props.index)},className:\"listing\"},r.a.createElement(\"div\",{tabIndex:\"0\",className:\"listingName\"},this.props.listing.name),r.a.createElement(\"div\",{className:\"listingPhoto\"},r.a.createElement(\"img\",{alt:this.props.listing.name+\" photo\",src:t})),r.a.createElement(\"div\",null,this.props.listing.address[0]),r.a.createElement(\"div\",null,this.props.listing.address[1]),r.a.createElement(\"div\",null,r.a.createElement(\"a\",{href:this.props.listing.url},\"See Yelp For More Information\")))}}]),t}(a.Component),k=function(e){function t(){var e,n;Object(s.a)(this,t);for(var a=arguments.length,i=new Array(a),o=0;o<a;o++)i[o]=arguments[o];return(n=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(i)))).state={allMarkers:[],filteredMarkers:null,filteredListings:null,activeMarker:null,query:\"\"},n.createMarkers=function(e,t){var a=e.google,r=new a.maps.InfoWindow;a.maps.event.addListener(r,\"closeclick\",function(){n.state.activeMarker.setAnimation(null),n.setState({activeMarker:null})});var i=[];n.props.markerInfo.forEach(function(e){var o=new a.maps.Marker({position:{lat:e.position.lat,lng:e.position.lng},key:e.key,name:e.name,map:t,phone:e.phone,animation:a.maps.Animation.DROP}),s='<div className=\"infoWindow\">\\n            <h3>'.concat(o.name,\"</h3>\\n            <p>Phone: \").concat(o.phone,\"</p>\\n          </div>\");o.addListener(\"click\",function(){n.state.allMarkers.slice().forEach(function(e){e.setAnimation(null)}),r.setContent(s),r.open(t,o),n.setState({activeMarker:o}),n.state.activeMarker.setAnimation(a.maps.Animation.BOUNCE)}),i.push(o)}),n.setState({allMarkers:i,filteredMarkers:i})},n.toggleListingMarker=function(e){if(null!==n.state.filteredListings){var t=n.state.filteredMarkers[e];n.setState({activeMarker:t}),t.setAnimation(n.props.google.maps.Animation.BOUNCE)}else{var a=n.state.allMarkers[e];n.setState({activeMarker:a}),a.setAnimation(n.props.google.maps.Animation.BOUNCE)}},n.onInfoWindowClose=function(e){e.setAnimation(null)},n.updateQuery=function(e){n.setState({query:e}),n.updateListing(e)},n.updateListing=function(e,t){if(e){var a=n.props.markerInfo.filter(function(t){return t.name.toLowerCase().includes(e.toLowerCase())});n.setState({filteredListings:a}),n.state.filteredMarkers.forEach(function(t){if(!t.name.toLowerCase().includes(e.toLowerCase()))return t.setVisible(!1)})}else n.setState({filteredListings:null}),n.toggleVisibleOnAll()},n.toggleVisibleOnAll=function(){n.state.allMarkers.forEach(function(e){return e.setVisible(!0)})},n.displayListings=function(){return null!==n.state.filteredListings?n.state.filteredListings.map(function(e,t){return r.a.createElement(\"li\",{key:e.key},r.a.createElement(h,{index:t,listing:e,allMarkers:n.state.allMarkers,toggleListingMarker:n.toggleListingMarker,google:n.props.google}))}):n.props.markerInfo.map(function(e,t){return r.a.createElement(\"li\",{key:e.key},r.a.createElement(h,{index:t,listing:e,allMarkers:n.state.allMarkers,toggleListingMarker:n.toggleListingMarker,google:n.props.google}))})},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this;return r.a.createElement(g.Map,{\"aria-label\":\"map\",role:\"application\",google:this.props.google,zoom:14,initialCenter:{lat:32.314747,lng:-95.249265},onClick:this.props.toggleMenu,onReady:this.createMarkers},r.a.createElement(m.a,{open:this.props.menuOpen,onClose:this.props.toggleMenu},r.a.createElement(\"section\",{className:\"listMenu\"},r.a.createElement(f.DebounceInput,{minLength:1,debounceTimeout:500,className:\"filter\",element:\"input\",type:\"text\",placeholder:\"Filter Listings by Name\",onChange:function(t){return e.updateQuery(t.target.value)},value:this.state.query}),r.a.createElement(\"ul\",{className:\"list\"},this.displayListings()))))}}]),t}(a.Component),v=Object(g.GoogleApiWrapper)({apiKey:\"AIzaSyCxXK6lMDoTo4dHosssdE0SyJ8UtVOtpbU\"})(k),M=n(26),y=n(66),w=n(67);n(195);M.b.add(w.a);var b=\"nURSXAKqkUMPdntGky6KItOf0vSFaLnwcaN-w7MPeI5543g1OtE6dVSA_tXWRMwZaSUzNuzeyGIfT_gsINuzE_9_HO8B__a3-cvcVUNrWgOLH2yX0FvC8q3ECcnXW3Yx\",E=function(e){function t(){var e,n;Object(s.a)(this,t);for(var a=arguments.length,r=new Array(a),i=0;i<a;i++)r[i]=arguments[i];return(n=Object(c.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).state={yelpData:[],markerInfo:null,menuOpen:!1,error:!1},n.getYelpInfo=function(){var e=new Headers({Authorization:\"Bearer \".concat(b)}),t=new Request(\"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?radius=5000&latitude=32.322613&longitude=-95.262592&sort_by=distance&limit=50\",{method:\"GET\",headers:e});fetch(t).then(function(e){return e.json()}).then(function(e){return n.setState({yelpData:e.businesses})}).then(function(){return n.getMarkerInfo(n.state.yelpData)}).catch(function(){return n.setState({error:!0})})},n.getMarkerInfo=function(e){var t=[];e.map(function(e){var n={key:e.id,name:e.name,position:{lat:e.coordinates.latitude,lng:e.coordinates.longitude},phone:e.display_phone,address:e.location.display_address,image_url:e.image_url,url:e.url};return t.push(n)}),n.setState({markerInfo:t})},n.toggleMenu=function(){n.setState({menuOpen:!n.state.menuOpen})},n}return Object(p.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){this.getYelpInfo()}},{key:\"render\",value:function(){return!0===this.state.error?r.a.createElement(\"div\",{className:\"errorMessage\"},\"Oh No! It looks like there was an error! Please try again later.\"):null===this.state.markerInfo?r.a.createElement(\"div\",{className:\"loadingYelp\"},\"Please wait. Loading data from Yelp!\"):r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"nav\",{className:\"mainHeader\"},r.a.createElement(\"h2\",null,\"Nom-Nom Finder\"),r.a.createElement(\"button\",{\"aria-label\":\"Listing Menu\",onClick:this.toggleMenu},r.a.createElement(y.a,{icon:\"bars\"}))),r.a.createElement(v,{markerInfo:this.state.markerInfo,menuOpen:this.state.menuOpen,toggleMenu:this.toggleMenu,filteredListings:this.state.filteredListings,filteredMarkers:this.state.filteredMarkers}))}}]),t}(a.Component),O=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function L(e,t){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;null!=n&&(n.onstatechange=function(){\"installed\"===n.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.\"),t&&t.onUpdate&&t.onUpdate(e)):(console.log(\"Content is cached for offline use.\"),t&&t.onSuccess&&t.onSuccess(e)))})}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}o.a.render(r.a.createElement(E,null),document.getElementById(\"root\")),function(e){if(\"serviceWorker\"in navigator){if(new URL(\"/FENDNeighborhoodProjectFinal/index.html\",window.location.href).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var t=\"\".concat(\"/FENDNeighborhoodProjectFinal/index.html\",\"/service-worker.js\");O?(function(e,t){fetch(e).then(function(n){var a=n.headers.get(\"content-type\");404===n.status||null!=a&&-1===a.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):L(e,t)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(t,e),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA\")})):L(t,e)})}}()},68:function(e,t,n){e.exports=n(197)},73:function(e,t,n){}},[[68,2,1]]]);","extractedComments":[]}