{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\src\\\\components\\\\Listing.js\";\nimport React, { Component } from 'react';\n\nvar Listing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Listing, _Component);\n\n  function Listing() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Listing);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Listing)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.toggleSelectedListing = function (index) {\n      _this.props.index.addListener('click', function (index) {\n        // Use slice to create a temporary marker array that can be iterated over to stop the animation for the markers\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\n        var tempMarkers = _this.state.markers.slice();\n\n        tempMarkers.forEach(function (mark) {\n          mark.setAnimation(null);\n        }); //set the content for the new window\n\n        infoWindow.setContent(windowContent); //show the new window based on the clicked marker\n\n        infoWindow.open(map, marker); //set state to activeMarker\n\n        _this.setState({\n          activeMarker: marker\n        }); //set marker animation\n\n\n        marker.setAnimation(google.maps.Animation.BOUNCE);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Listing, [{\n    key: \"render\",\n    value: function render() {\n      var displayedImage = this.props.listing.image_url !== \"\" ? this.props.listing.image_url : 'http://via.placeholder.com/250x250.jpg/FFFFFF/000000/?text=No+Image+Available';\n      return React.createElement(\"section\", {\n        onClick: this.props.toggleSelectedListing(),\n        className: \"listing\",\n        marker: this.props.activeMarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        tabIndex: \"0\",\n        className: \"listingName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.listing.name), React.createElement(\"div\", {\n        className: \"listingPhoto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: this.props.listing.name + \" photo\",\n        src: displayedImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.listing.address[0]), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.listing.address[1]), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: this.props.listing.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"See Yelp For More Information\")));\n    }\n  }]);\n\n  return Listing;\n}(Component);\n\nexport default Listing;","map":{"version":3,"sources":["C:\\Users\\Rebekah\\Desktop\\Phase 2 Nanodegree\\final-project\\src\\components\\Listing.js"],"names":["React","Component","Listing","toggleSelectedListing","index","props","addListener","tempMarkers","state","markers","slice","forEach","mark","setAnimation","infoWindow","setContent","windowContent","open","map","marker","setState","activeMarker","google","maps","Animation","BOUNCE","displayedImage","listing","image_url","name","address","url"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;;UAKJC,qB,GAAwB,UAACC,KAAD,EAAW;AACjC,YAAKC,KAAL,CAAWD,KAAX,CAAiBE,WAAjB,CAA6B,OAA7B,EAAsC,UAACF,KAAD,EAAW;AAC/C;AACA;AACA,YAAIG,WAAW,GAAG,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,EAAlB;;AACAH,QAAAA,WAAW,CAACI,OAAZ,CAAoB,UAAAC,IAAI,EAAI;AAC1BA,UAAAA,IAAI,CAACC,YAAL,CAAkB,IAAlB;AACD,SAFD,EAJ+C,CAO/C;;AACAC,QAAAA,UAAU,CAACC,UAAX,CAAsBC,aAAtB,EAR+C,CAS/C;;AACAF,QAAAA,UAAU,CAACG,IAAX,CAAgBC,GAAhB,EAAqBC,MAArB,EAV+C,CAW/C;;AACA,cAAKC,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEF;AAAhB,SAAd,EAZ+C,CAa/C;;;AACAA,QAAAA,MAAM,CAACN,YAAP,CAAoBS,MAAM,CAACC,IAAP,CAAYC,SAAZ,CAAsBC,MAA1C;AACD,OAfD;AAgBD,K;;;;;;;6BAEQ;AACP,UAAIC,cAAc,GAAI,KAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,SAAnB,KAAiC,EAAlC,GACnB,KAAKvB,KAAL,CAAWsB,OAAX,CAAmBC,SADA,GACY,+EADjC;AAGA,aACE;AAAS,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWF,qBAAX,EAAlB;AAAsD,QAAA,SAAS,EAAC,SAAhE;AAA0E,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWgB,YAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,QAAQ,EAAC,GAAd;AAAkB,QAAA,SAAS,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2C,KAAKhB,KAAL,CAAWsB,OAAX,CAAmBE,IAA9D,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKxB,KAAL,CAAWsB,OAAX,CAAmBE,IAAnB,GAA0B,QAApC;AAA8C,QAAA,GAAG,EAAEH,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKrB,KAAL,CAAWsB,OAAX,CAAmBG,OAAnB,CAA2B,CAA3B,CAAN,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKzB,KAAL,CAAWsB,OAAX,CAAmBG,OAAnB,CAA2B,CAA3B,CAAN,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAG,QAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWsB,OAAX,CAAmBI,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAL,CAPF,CADF;AAWD;;;;EAvCmB9B,S;;AA0CtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Listing extends Component {\r\n  // use this.props.index to call a new function then pass on the props to pass index back to MapContainer\r\n  // click for the marker at that index position in the list of markers at this.state.markers\r\n  // take the code you already have in the marker click listener and move it into another function that take the index as a parameter\r\n\r\n  toggleSelectedListing = (index) => {\r\n    this.props.index.addListener('click', (index) => {\r\n      // Use slice to create a temporary marker array that can be iterated over to stop the animation for the markers\r\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\r\n      let tempMarkers = this.state.markers.slice();\r\n      tempMarkers.forEach(mark => {\r\n        mark.setAnimation(null);\r\n      })\r\n      //set the content for the new window\r\n      infoWindow.setContent(windowContent);\r\n      //show the new window based on the clicked marker\r\n      infoWindow.open(map, marker);\r\n      //set state to activeMarker\r\n      this.setState({ activeMarker: marker });\r\n      //set marker animation\r\n      marker.setAnimation(google.maps.Animation.BOUNCE);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let displayedImage = (this.props.listing.image_url !== \"\") ?\r\n      this.props.listing.image_url : 'http://via.placeholder.com/250x250.jpg/FFFFFF/000000/?text=No+Image+Available';\r\n\r\n    return (\r\n      <section onClick={this.props.toggleSelectedListing()} className='listing' marker={this.props.activeMarker}>\r\n        <div tabIndex='0' className=\"listingName\">{this.props.listing.name}</div>\r\n        <div className=\"listingPhoto\">\r\n          <img alt={this.props.listing.name + \" photo\"} src={displayedImage}/>\r\n        </div>\r\n        <div>{this.props.listing.address[0]}</div>\r\n        <div>{this.props.listing.address[1]}</div>\r\n        <div><a href={this.props.listing.url}>See Yelp For More Information</a></div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Listing"]},"metadata":{},"sourceType":"module"}