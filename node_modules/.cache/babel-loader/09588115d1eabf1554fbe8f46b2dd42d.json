{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\src\\\\components\\\\MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport Drawer from '@material-ui/core/Drawer';\nimport { DebounceInput } from 'react-debounce-input';\nimport Listing from './Listing';\n\nvar MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      markers: [],\n      filteredMarkers: null,\n      filteredListings: null,\n      selectedPlace: null,\n      activeMarker: null,\n      showInfo: false,\n      query: \"\" // Create markers using the props given from google-maps-react via mapProps and map https://github.com/fullstackreact/google-maps-react\n\n    };\n\n    _this.createMarkers = function (mapProps, map) {\n      // set google to mapProps from Map for marker creation\n      var google = mapProps.google;\n      var infoWindow = new google.maps.InfoWindow(); // array to store all markers\n\n      var markers = []; // For each markerInfo object, generate a Marker\n\n      _this.props.markerInfo.forEach(function (item) {\n        var marker = new google.maps.Marker({\n          position: {\n            lat: item.position.lat,\n            lng: item.position.lng\n          },\n          key: item.key,\n          name: item.name,\n          map: map,\n          phone: item.phone,\n          animation: google.maps.Animation.Drop\n        }); // Content for each infoWindow. Reference found here https://developers.google.com/maps/documentation/javascript/infowindows\n\n        var windowContent = \"<div className=\\\"infoWindow\\\">\\n            <h3>\".concat(marker.name, \"</h3>\\n            <p>Phone: \").concat(marker.phone, \"</p>\\n          </div>\");\n        marker.addListener('click', function () {\n          infoWindow.close();\n          infoWindow.setContent(windowContent);\n          infoWindow.open(map, marker);\n        }); // store marker into array to push to set to state\n\n        markers.push(marker);\n      }); // set state for markers\n\n\n      _this.setState({\n        markers: markers,\n        filteredMarkers: markers\n      });\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState({\n        query: query\n      });\n\n      _this.updateListing(query);\n    };\n\n    _this.updateListing = function (query) {\n      if (query) {\n        _this.setState(_objectSpread({}, _this.state, {\n          filteredListings: _this.filterListings(query),\n          filteredMarkers: _this.filterMarkers(query)\n        }));\n\n        _this.hideFilteredMarkers();\n      } else {\n        _this.setState({\n          filteredListings: null,\n          filteredMarkers: null\n        });\n\n        _this.state.markers.setMapOnAll(map);\n      }\n    };\n\n    _this.setMapOnAll = function (map) {\n      _this.state.markers.forEach(function (marker) {\n        return marker.map = map;\n      });\n    };\n\n    _this.hideMarker = function (marker) {\n      if (marker.map !== null) {\n        return marker.map = null;\n      }\n    };\n\n    _this.hideFilteredMarkers = function (item, query) {\n      if (item.name !== query.name) {\n        _this.state.filteredMarkers.hideMarker(item);\n      }\n    };\n\n    _this.filterListings = function (query) {\n      if (!query) {\n        return;\n      } else {\n        return _this.props.markerInfo.filter(function (listing) {\n          return listing.name.toLowerCase().includes(query.toLowerCase());\n        });\n      }\n    };\n\n    _this.filterMarkers = function (query) {\n      if (!query) {\n        return;\n      } else {\n        return _this.state.markers.filter(function (listing) {\n          return listing.name.toLowerCase().includes(query.toLowerCase());\n        });\n      }\n    };\n\n    _this.displayListings = function () {\n      if (_this.state.filteredListings !== null) {\n        var filteredListing = _this.state.filteredListings.map(function (listing) {\n          return React.createElement(\"li\", {\n            key: listing.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(Listing, {\n            listing: listing,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }));\n        });\n\n        return filteredListing;\n      } else {\n        return _this.props.markerInfo.map(function (listing) {\n          return React.createElement(\"li\", {\n            key: listing.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(Listing, {\n            listing: listing,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }));\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    // componentDidUpdate() {\n    //   this.updateListing();\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      var center = {\n        lat: 32.322613,\n        lng: -95.262592 // TODO: Map displays all location markers by default, and displays the filtered subset of location markers when a filter is applied.\n        // TODO: Clicking a marker displays unique information about a location somewhere on the page (modal, separate div, inside an infoWindow).\n\n      };\n      return (// Displays Map and markers.\n        React.createElement(Map, {\n          \"aria-label\": \"map\",\n          role: \"application\",\n          google: this.props.google,\n          zoom: 15,\n          initialCenter: center,\n          onClick: this.props.toggleMenu,\n          onReady: this.createMarkers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(Drawer, {\n          open: this.props.menuOpen,\n          onClose: this.props.toggleMenu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"section\", {\n          className: \"listMenu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(DebounceInput, {\n          minLength: 1,\n          debounceTimeout: 500,\n          className: \"filter\",\n          element: \"input\",\n          type: \"text\",\n          placeholder: \"Filter Listings by Name\",\n          onChange: function onChange(e) {\n            return _this2.updateQuery(e.target.value);\n          },\n          value: this.state.query,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }), React.createElement(\"ul\", {\n          className: \"list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, this.displayListings()))))\n      );\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCxXK6lMDoTo4dHosssdE0SyJ8UtVOtpbU\"\n})(MapContainer);","map":{"version":3,"sources":["C:\\Users\\Rebekah\\Desktop\\Phase 2 Nanodegree\\final-project\\src\\components\\MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","Drawer","DebounceInput","Listing","MapContainer","state","markers","filteredMarkers","filteredListings","selectedPlace","activeMarker","showInfo","query","createMarkers","mapProps","map","google","infoWindow","maps","InfoWindow","props","markerInfo","forEach","item","marker","Marker","position","lat","lng","key","name","phone","animation","Animation","Drop","windowContent","addListener","close","setContent","open","push","setState","updateQuery","updateListing","filterListings","filterMarkers","hideFilteredMarkers","setMapOnAll","hideMarker","filter","listing","toLowerCase","includes","displayListings","filteredListing","id","center","toggleMenu","menuOpen","e","target","value","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { DebounceInput } from 'react-debounce-input';\r\nimport Listing from './Listing';\r\n\r\nclass MapContainer extends Component {\r\n  state = {\r\n    markers: [],\r\n    filteredMarkers: null,\r\n    filteredListings: null,\r\n    selectedPlace: null,\r\n    activeMarker: null,\r\n    showInfo: false,\r\n    query: \"\",\r\n  }\r\n\r\n  // Create markers using the props given from google-maps-react via mapProps and map https://github.com/fullstackreact/google-maps-react\r\n  createMarkers = (mapProps, map) => {\r\n    // set google to mapProps from Map for marker creation\r\n    const { google } = mapProps;\r\n    const infoWindow = new google.maps.InfoWindow();\r\n\r\n    // array to store all markers\r\n    let markers = [];\r\n\r\n    // For each markerInfo object, generate a Marker\r\n    this.props.markerInfo.forEach(item => {\r\n      const marker = new google.maps.Marker({\r\n        position: { lat: item.position.lat, lng: item.position.lng },\r\n        key: item.key,\r\n        name: item.name,\r\n        map: map,\r\n        phone: item.phone,\r\n        animation: google.maps.Animation.Drop,\r\n      });\r\n\r\n      // Content for each infoWindow. Reference found here https://developers.google.com/maps/documentation/javascript/infowindows\r\n      let windowContent =\r\n        `<div className=\"infoWindow\">\r\n            <h3>${marker.name}</h3>\r\n            <p>Phone: ${marker.phone}</p>\r\n          </div>`;\r\n\r\n      marker.addListener('click', () => {\r\n        infoWindow.close();\r\n        infoWindow.setContent(windowContent);\r\n        infoWindow.open(map, marker);\r\n      });\r\n\r\n      // store marker into array to push to set to state\r\n      markers.push(marker);\r\n    });\r\n\r\n    // set state for markers\r\n    this.setState({ markers: markers, filteredMarkers: markers });\r\n  };\r\n\r\n  // Updates filter input if there's a query, then updates listings and markers\r\n  updateQuery = (query) => {\r\n    this.setState({ query: query })\r\n    this.updateListing(query)\r\n  };\r\n\r\n  // Set filteredListings state if query input\r\n  updateListing = (query) => {\r\n    if (query) {\r\n      this.setState({\r\n        ...this.state,\r\n        filteredListings: this.filterListings(query),\r\n        filteredMarkers: this.filterMarkers(query)\r\n      });\r\n      this.hideFilteredMarkers();\r\n    } else {\r\n      this.setState({ filteredListings: null, filteredMarkers: null });\r\n      this.state.markers.setMapOnAll(map);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  //Update listings based on filter input\r\n  setMapOnAll = (map) => {\r\n    this.state.markers.forEach(marker => marker.map = map)\r\n  };\r\n  hideMarker = (marker) => {\r\n    if (marker.map !== null) {\r\n      return marker.map = null;\r\n    }\r\n  };\r\n  hideFilteredMarkers = (item, query) => {\r\n    if (item.name !== query.name) {\r\n      this.state.filteredMarkers.hideMarker(item);\r\n    }\r\n  };\r\n\r\n  filterListings = (query) => {\r\n    if (!query) {\r\n      return;\r\n    } else {\r\n      return this.props.markerInfo.filter(listing => (listing.name.toLowerCase().includes(query.toLowerCase())))\r\n    }\r\n  }\r\n\r\n  //Update markers based on filter input\r\n  filterMarkers = (query) => {\r\n    if (!query) {\r\n      return;\r\n    } else {\r\n      return this.state.markers.filter(listing => listing.name.toLowerCase().includes(query.toLowerCase()));\r\n    }\r\n  }\r\n\r\n  // Map over filteredListings and display filtered listings. If null, display all listings\r\n  displayListings = () => {\r\n    if (this.state.filteredListings !== null) {\r\n      let filteredListing = this.state.filteredListings.map(listing => (\r\n        <li key={listing.id}>\r\n          <Listing\r\n            listing={listing} />\r\n        </li>\r\n      ))\r\n      return filteredListing;\r\n    } else {\r\n      return this.props.markerInfo.map(listing => (\r\n        <li key={listing.id}>\r\n          <Listing\r\n            listing={listing} />\r\n        </li>))\r\n    }\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   this.updateListing();\r\n  // }\r\n\r\n  render() {\r\n    const center = {\r\n      lat: 32.322613,\r\n      lng: -95.262592\r\n    }\r\n\r\n    // TODO: Map displays all location markers by default, and displays the filtered subset of location markers when a filter is applied.\r\n\r\n    // TODO: Clicking a marker displays unique information about a location somewhere on the page (modal, separate div, inside an infoWindow).\r\n\r\n    return (\r\n      // Displays Map and markers.\r\n      <Map\r\n        aria-label=\"map\"\r\n        role=\"application\"\r\n        google={this.props.google}\r\n        zoom={15}\r\n        initialCenter={center}\r\n        onClick={this.props.toggleMenu}\r\n        onReady={this.createMarkers} >\r\n        <Drawer\r\n          open={this.props.menuOpen}\r\n          onClose={this.props.toggleMenu} >\r\n          <section className=\"listMenu\">\r\n            <DebounceInput\r\n              minLength={1}\r\n              debounceTimeout={500}\r\n              className='filter'\r\n              element=\"input\"\r\n              type='text'\r\n              placeholder='Filter Listings by Name'\r\n              onChange={e => this.updateQuery(e.target.value)}\r\n              value={this.state.query} />\r\n            <ul className='list'>\r\n              {this.displayListings()}\r\n            </ul>\r\n          </section>\r\n        </Drawer>\r\n        {/* <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showInfo}\r\n          onClose={this.onInfoClose}>\r\n          <div>\r\n            <h1>Somethingsomethingsomething</h1>\r\n          </div>\r\n        </InfoWindow> */}\r\n      </Map>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: (\"AIzaSyCxXK6lMDoTo4dHosssdE0SyJ8UtVOtpbU\")\r\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}