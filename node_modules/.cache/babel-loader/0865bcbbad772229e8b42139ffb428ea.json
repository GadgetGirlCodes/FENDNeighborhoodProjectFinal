{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rebekah\\\\Desktop\\\\Phase 2 Nanodegree\\\\final-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ListMenu from './components/ListMenu';\nimport MapContainer from './components/MapContainer';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nlibrary.add(faBars);\nvar YELP_KEY = 'nURSXAKqkUMPdntGky6KItOf0vSFaLnwcaN-w7MPeI5543g1OtE6dVSA_tXWRMwZaSUzNuzeyGIfT_gsINuzE_9_HO8B__a3-cvcVUNrWgOLH2yX0FvC8q3ECcnXW3Yx';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      markers: [],\n      yelpData: [],\n      filteredListings: null,\n      menuOpen: false // DONE: Application utilizes the Google Maps API or another mapping system and at least one non-Google third-party API. Refer to this documentation\n      // DONE: All data requests are retrieved in an asynchronous manner using either the Fetch API or XMLHttpRequest.\n      // Get and store location information from Yelp\n\n    };\n\n    _this.getYelpInfo = function () {\n      var url = \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?radius=2000&latitude=32.322613&longitude=-95.262592&sort_by=distance\";\n      var headers = new Headers({\n        Authorization: \"Bearer \".concat(YELP_KEY)\n      });\n      var request = new Request(url, {\n        method: 'GET',\n        headers: headers\n      });\n      var markers = [];\n      fetch(request).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong...');\n        }\n      }).then(function (data) {\n        return _this.setState({\n          yelpData: data.businesses\n        });\n      }).then(_this.state.yelpData.map(function (item) {\n        markers.push(item.coordinates, item.name);\n      })).then(_this.setState({\n        markers: markers\n      })).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.toggleMenu = function () {\n      _this.setState({\n        menuOpen: !_this.state.menuOpen\n      });\n    };\n\n    _this.updateListing = function (query) {\n      if (query) {\n        _this.setState(_objectSpread({}, _this.state, {\n          filteredListings: _this.filterListings(query)\n        }));\n      } else {\n        _this.setState({\n          filteredListings: null\n        });\n      }\n    };\n\n    _this.filterListings = function (query) {\n      if (!query) {\n        return;\n      } else {\n        return _this.state.yelpData.filter(function (listing) {\n          return listing.name.toLowerCase().includes(query.toLowerCase());\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getYelpInfo();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"mainHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Nom-Nom Finder\"), React.createElement(\"button\", {\n        \"aria-label\": \"Listing\",\n        onClick: this.toggleMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"bars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(ListMenu, {\n        yelpData: this.state.yelpData,\n        menuOpen: this.state.menuOpen,\n        toggleMenu: this.toggleMenu,\n        updateListing: this.updateListing,\n        filteredListings: this.state.filteredListings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(MapContainer, {\n        yelpData: this.state.yelpData,\n        filteredListings: this.state.filteredListings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Rebekah\\Desktop\\Phase 2 Nanodegree\\final-project\\src\\App.js"],"names":["React","Component","ListMenu","MapContainer","library","FontAwesomeIcon","faBars","add","YELP_KEY","App","state","markers","yelpData","filteredListings","menuOpen","getYelpInfo","url","headers","Headers","Authorization","request","Request","method","fetch","then","response","ok","json","Error","data","setState","businesses","map","item","push","coordinates","name","catch","error","toggleMenu","updateListing","query","filterListings","filter","listing","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ListMenu from './components/ListMenu';\nimport MapContainer from './components/MapContainer';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\n\nlibrary.add(faBars)\n\nconst YELP_KEY = 'nURSXAKqkUMPdntGky6KItOf0vSFaLnwcaN-w7MPeI5543g1OtE6dVSA_tXWRMwZaSUzNuzeyGIfT_gsINuzE_9_HO8B__a3-cvcVUNrWgOLH2yX0FvC8q3ECcnXW3Yx'\n\nclass App extends Component {\n  state = {\n    markers: [],\n    yelpData: [],\n    filteredListings: null,\n    menuOpen: false\n  }\n\n  // DONE: Application utilizes the Google Maps API or another mapping system and at least one non-Google third-party API. Refer to this documentation\n  // DONE: All data requests are retrieved in an asynchronous manner using either the Fetch API or XMLHttpRequest.\n\n  // Get and store location information from Yelp\n  getYelpInfo = () => {\n      let url = \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?radius=2000&latitude=32.322613&longitude=-95.262592&sort_by=distance\"\n      let headers = new Headers({\n          Authorization: `Bearer ${YELP_KEY}`,\n        });\n      let request = new Request(url, {\n        method: 'GET',\n        headers\n      })\n      let markers = [];\n      fetch(request)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('Something went wrong...');\n          }\n        })\n        .then(data => this.setState({ yelpData: data.businesses }))\n        .then(this.state.yelpData.map(item => {markers.push(item.coordinates, item.name)}))\n        .then(this.setState({ markers: markers }))\n        .catch(error => this.setState({ error }));\n    };\n\n  // Toggle ListMenu\n  toggleMenu = () => {\n    this.setState({ menuOpen: !this.state.menuOpen });\n  }\n\n  // Set filteredListings state if query input\n  updateListing = (query) => {\n    if (query) {\n      this.setState({\n        ...this.state,\n        filteredListings: this.filterListings(query)\n      });\n    } else {\n      this.setState({ filteredListings: null })\n    }\n  }\n\n  //Update listings based on filter input, if none, leave filteredListings empty\n  filterListings = (query) => {\n    if (!query) {\n      return;\n    } else {\n      return this.state.yelpData.filter(listing => listing.name.toLowerCase().includes(query.toLowerCase()));\n    }\n  }\n\n  componentDidMount() {\n    this.getYelpInfo();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"mainHeader\">\n          <h2>Nom-Nom Finder</h2>\n          <button aria-label=\"Listing\" onClick={this.toggleMenu}><FontAwesomeIcon icon=\"bars\"/></button>\n        </nav>\n        <ListMenu\n          yelpData={this.state.yelpData}\n          menuOpen={this.state.menuOpen}\n          toggleMenu={this.toggleMenu}\n          updateListing={this.updateListing}\n          filteredListings={this.state.filteredListings} />\n        <MapContainer\n          yelpData={this.state.yelpData}\n          filteredListings={this.state.filteredListings} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}